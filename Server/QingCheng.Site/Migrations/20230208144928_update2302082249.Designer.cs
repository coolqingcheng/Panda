// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QingCheng.Site;

#nullable disable

namespace QingCheng.Site.Migrations
{
    [DbContext(typeof(QingChengContext))]
    [Migration("20230208144928_update2302082249")]
    partial class update2302082249
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.FriendLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_publish");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_friend_links");

                    b.ToTable("friend_links", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostCateRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("PostCateId")
                        .HasColumnType("int")
                        .HasColumnName("post_cate_id");

                    b.Property<int>("PostsId")
                        .HasColumnType("int")
                        .HasColumnName("posts_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_post_cate_relations");

                    b.HasIndex("PostCateId")
                        .HasDatabaseName("ix_post_cate_relations_post_cate_id");

                    b.HasIndex("PostsId")
                        .HasDatabaseName("ix_post_cate_relations_posts_id");

                    b.ToTable("post_cate_relations", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostCates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CateName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cate_name");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_post_cates");

                    b.ToTable("post_cates", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nick_name");

                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("pid");

                    b.Property<int>("PostsId")
                        .HasColumnType("int")
                        .HasColumnName("posts_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("pk_post_comments");

                    b.HasIndex("PostsId")
                        .HasDatabaseName("ix_post_comments_posts_id");

                    b.ToTable("post_comments", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostTagRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("PostTagsId")
                        .HasColumnType("int")
                        .HasColumnName("post_tags_id");

                    b.Property<int>("PostsId")
                        .HasColumnType("int")
                        .HasColumnName("posts_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_post_tag_relations");

                    b.HasIndex("PostTagsId")
                        .HasDatabaseName("ix_post_tag_relations_post_tags_id");

                    b.HasIndex("PostsId")
                        .HasDatabaseName("ix_post_tag_relations_posts_id");

                    b.ToTable("post_tag_relations", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tag_name");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_post_tags");

                    b.ToTable("post_tags", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostVisitRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    b.Property<string>("UA")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ua");

                    b.Property<string>("UId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("u_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_post_visit_record");

                    b.HasIndex("PostId")
                        .HasDatabaseName("ix_post_visit_record_post_id");

                    b.ToTable("post_visit_record", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.Posts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_delete");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_publish");

                    b.Property<bool>("IsTop")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_top");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int")
                        .HasColumnName("read_count");

                    b.Property<string>("Snippet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("snippet");

                    b.Property<string>("Thumb")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("thumb");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_posts");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountLoginRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<bool>("IsLogin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_login");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("UA")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ua");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_account_login_record");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_account_login_record_account_id");

                    b.ToTable("account_login_record", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountRoleRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<Guid>("AccountRoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_role_id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("pk_account_role_relation");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_account_role_relation_account_id");

                    b.HasIndex("AccountRoleId")
                        .HasDatabaseName("ix_account_role_relation_account_role_id");

                    b.ToTable("account_role_relation", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_account_roles");

                    b.ToTable("account_roles", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.Accounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<DateTime>("LockedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("locked_time");

                    b.Property<int>("LoginFailCount")
                        .HasColumnType("int")
                        .HasColumnName("login_fail_count");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("pwd");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_accounts");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.SysConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("group_name");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("key");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_sys_config");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("ix_sys_config_key");

                    b.ToTable("sys_config", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.SysResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("client_ip");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<int>("StorageType")
                        .HasColumnType("int")
                        .HasColumnName("storage_type");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("suffix");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_sys_resources");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_sys_resources_account_id");

                    b.ToTable("sys_resources", (string)null);
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostCateRelation", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Blogs.PostCates", "PostCate")
                        .WithMany("PostCateRelations")
                        .HasForeignKey("PostCateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_cate_relations_post_cates_post_cate_id");

                    b.HasOne("QingCheng.Site.Data.Blogs.Posts", "Posts")
                        .WithMany("CateRelations")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_post_cate_relations_posts_posts_id");

                    b.Navigation("PostCate");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostComments", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Blogs.Posts", "Posts")
                        .WithMany("PostComments")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_comments_posts_posts_id");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostTagRelation", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Blogs.PostTags", "PostTags")
                        .WithMany("TagRelation")
                        .HasForeignKey("PostTagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_tag_relations_post_tags_post_tags_id");

                    b.HasOne("QingCheng.Site.Data.Blogs.Posts", "Posts")
                        .WithMany("TagRelations")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_tag_relations_posts_posts_id");

                    b.Navigation("PostTags");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostVisitRecord", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Blogs.Posts", "Post")
                        .WithMany("VisitRecords")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_visit_record_posts_post_id");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountLoginRecord", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Entitys.Accounts", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_login_record_accounts_account_id");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountRoleRelation", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Entitys.Accounts", "Account")
                        .WithMany("AccountRoleRelations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_role_relation_accounts_account_id");

                    b.HasOne("QingCheng.Site.Data.Entitys.AccountRoles", "AccountRole")
                        .WithMany("AccountRoleRelations")
                        .HasForeignKey("AccountRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_role_relation_account_roles_account_role_id");

                    b.Navigation("Account");

                    b.Navigation("AccountRole");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.SysResource", b =>
                {
                    b.HasOne("QingCheng.Site.Data.Entitys.Accounts", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("fk_sys_resources_accounts_account_id");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostCates", b =>
                {
                    b.Navigation("PostCateRelations");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.PostTags", b =>
                {
                    b.Navigation("TagRelation");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Blogs.Posts", b =>
                {
                    b.Navigation("CateRelations");

                    b.Navigation("PostComments");

                    b.Navigation("TagRelations");

                    b.Navigation("VisitRecords");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.AccountRoles", b =>
                {
                    b.Navigation("AccountRoleRelations");
                });

            modelBuilder.Entity("QingCheng.Site.Data.Entitys.Accounts", b =>
                {
                    b.Navigation("AccountRoleRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
